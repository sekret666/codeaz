import importlib
from importlib import import_module
from sqlite3 import connect
import os
import requests
from telethon.tl.types import InputMessagesFilterDocument
from telethon.errors.rpcerrorlist import PhoneNumberInvalidError
from telethon.tl.functions.channels import GetMessagesRequest
from . import BRAIN_CHECKER, LOGS, bot, PLUGIN_CHANNEL_ID, CMD_HELP, LANGUAGE, COD_VERSION, PATTERNS
from .modules import ALL_MODULES
import userbot.modules.sql_helper.mesaj_sql as MSJ_SQL
import userbot.modules.sql_helper.galeri_sql as GALERI_SQL
from pySmartDL import SmartDL
from telethon.tl import functions

from random import choice
import chromedriver_autoinstaller
from json import loads, JSONDecodeError
import re
import userbot.cmdhelp


DIZCILIK_STR = [
    "Stikeri fƒ±rladƒ±ram...",
    "Ya≈üa≈üƒ±n fƒ±rlatmaq...",
    "Bu stikeri √∂z paketim…ô d…ôv…ôt edir…ôm...",
    "Bunu fƒ±rlatmalƒ±yam...",
    "G√∂z…ôl stikerdi!\nT…ôcili fƒ±rlatmalƒ±yam..",
    "Stikerini fƒ±rladƒ±ram!\nhahaha.",
    "Buna ba (‚òâÔΩ°‚òâ)!‚Üí\nM…ôn bunu fƒ±rladark…ôn...",
    "Stikerivi oƒüurladƒ±m...",
    "Stiker q…ôf…ôs…ô salƒ±nƒ±r...",
    "Lotu totu stikerivi oƒüurladƒ±... ",
]

AFKSTR = [
    "ƒ∞ndi t…ôcili i≈üim var, daha sonra mesaj atsan olar? Onsuz yenid…ôn g…ôl…ôc…ôm.",
    "Bu n√∂mr…ôy…ô z…ông √ßatmƒ±r. Telefon ya s√∂nd√ºr√ºl√ºb yada …ôhat…ô dair…ôsi xaricind…ôdi. Z…ôhm…ôt olmasa yenid…ôn c…ôhd edin. \nbiiiiiiiiiiiiiiiiiiiiiiiiiiiiip!",
    "Bir ne√ß…ô d…ôqiq…ô i√ßind…ô g…ôl…ôc…ôy…ôm. Ancaq g…ôlm…ôs…ôm...\ndaha √ßox g√∂zl…ô.",
    "ƒ∞ndi burada deyil…ôm, ba≈üqa yerd…ôy…ôm.",
    "ƒ∞nsan sevdiyini itir…ôn zaman\ncanƒ± yanar yanar yanaaaarrrr\nBoy baƒüƒ±≈üla üòÇ bilmirdim burda kims…ô var\nSahibim daha sonra siz…ô yazacaq.",
    "B…ôz…ôn h…ôyatdakƒ± …ôn yax≈üƒ± ≈üeyl…ôr g√∂zl…ôm…ôy…ô d…ôy…ôr‚Ä¶\nTez qayƒ±daram.",
    "Tez qayƒ±daram,\nama …ôy…ôr geri qayƒ±tmasam,\ndaha sonra qayƒ±daram.",
    "H…ôl…ôd…ô anlamadƒ±nsa,\nburada deyil…ôm.",
    "Al…ôm qalxsa s…ôni m…ôni m…ônd…ôn alnaƒüa hamƒ±dan alƒ±b g√∂t√ºrr…ôm s…ôni...\nSahibim burada deil ama qruza salacaq mahnƒ±lar oxuya bil…ôr…ôm üòìüö¨",
    "7 d…ôniz v…ô 7 √∂lk…ôd…ôn uzaqdayam,\n7 su v…ô 7 qit…ô,\n7 daƒü v…ô 7 t…ôp…ô,\n7 ovala v…ô 7 h√∂y√ºk,\n7 hovuz v…ô 7 g√∂l,\n7 bahar v…ô 7 √ßay,\n7 ≈ü…ôh…ôr v…ô 7 m…ôh…ôll…ô,\n7 blok v…ô 7 ev...\n\nMesajlarƒ±n bel…ô m…ôn…ô √ßatmayacaƒüƒ± yer!",
    "ƒ∞ndi klaviaturadan uzaqdayam, ama ekranƒ±nƒ±zda yeterinc…ô y√ºks…ôk s…ôsl…ô qƒ±≈üqƒ±rƒ±ƒü atsanƒ±z, sizi e≈üid…ô bil…ôr…ôm.",
    "Bu t…ôr…ôfd…ôn ir…ôll…ôyir…ôm\n---->",
    "Bu t…ôr…ôfd…ôn ir…ôll…ôyir…ôm\n<----",
    "Z…ôhm…ôt olmasa mesaj buraxƒ±n v…ô m…ôni olduƒüumdan daha √∂n…ômli hiss etdirin.",
    "Sahibim burda deil, buna g√∂r…ô m…ôn…ô yazmaƒüƒ± dayandƒ±r.",
    "Burda olsaydƒ±m,\nS…ôn…ô harada olduƒüumu dey…ôrdim.\n\nAma m…ôn deil…ôm,\ngeri qayƒ±tdƒ±ƒüƒ±mda m…ônd…ôn soru≈ü...",
    "Uzaqlardayam!\nN…ô vaxt qayƒ±daram bilmir…ôm !\nB…ôlk…ô bir ne√ß…ô d…ôqiq…ô sonra!",
    "Sahibim indi m…ô≈üƒüuldu. Adƒ±nƒ±zƒ±, n√∂mr…ônizi v…ô adresinizi vers…ôniz ona y√∂nl…ôndir…ôr…ôm v…ô bel…ôlikl…ô geri g…ôldiyi zaman, siz…ô cavab yazar",
    "Baƒüƒ±≈ülayƒ±n, sahibim burda deil.\nO g…ôl…ôn…ô q…ôd…ôr m…ôniml…ô danƒ±≈üa bil…ôrs…ôn.\nSahibim siz…ô sonra yazar.",
    "D√ºn…ôn gec…ô yar…ô nam…ô yazdƒ±m qalmƒ±≈üam …ôll…ôrd…ô ayaqlarda den…ôn he√ß halƒ±mƒ± soru≈ümazmƒ±? Qalmƒ±≈üam …ôll…ôrd…ô ayaqlarda\nSahibim burda deil ama s…ôn…ô mahnƒ± oxuyajammmm",
    "H…ôyat qƒ±sa, d…ôym…ôz qƒ±za...\nN…ôt…ôr zarafat el…ôdim?",
    "ƒ∞ndi burada deil…ôm....\nama burda olsaydƒ±m...\n\nbu m√∂ht…ô≈ü…ôm olardƒ± el…ômi qadan alƒ±m ?",
]

UNAPPROVED_MSG = ("`Hey salam!` {mention}`! Qorxma, Bu bir botdur.\n\n`"
                  "`Sahibim s…ôn…ô PM atma icaz…ôsi verm…ôyib. `"
                  "`Xai≈ü sahibimin aktiv olmasƒ±nƒ± g√∂zl…ô, o ad…ôt…ôn PM'l…ôri t…ôsdiql…ôyir.\n\n`"
                  "`T…ô≈ü…ôkk√ºrl…ôr ‚ù§Ô∏è`")

DB = connect("codbrain.check")
CURSOR = DB.cursor()
CURSOR.execute("""SELECT * FROM BRAIN1""")
ALL_ROWS = CURSOR.fetchall()
INVALID_PH = '\nX∆èTA: Giril∆èN telefon n√∂mr…ôsi ke√ß…ôrsizdir' \
             '\n  M…ôlumat: √∂lk…ô kodunu i≈ül…ôd…ôr…ô n√∂mr…ôni yaz' \
             '\n       Telefon n√∂mr…ônizi t…ôkrar yoxlayƒ±n'

for i in ALL_ROWS:
    BRAIN_CHECKER.append(i[0])
connect("codbrain").close()

def extractCommands(file):
    FileRead = open(file, 'r').read()
    
    if '/' in file:
        file = file.split('/')[-1]

    Pattern = re.findall(r"@register\(.*pattern=(r|)\"(.*)\".*\)", FileRead)
    Komutlar = []

    if re.search(r'CmdHelp\(.*\)', FileRead):
        pass
    else:
        dosyaAdi = file.replace('.py', '')
        CmdHelp = userbot.cmdhelp.CmdHelp(dosyaAdi, False)

        # Emrler #
        for Command in Pattern:
            Command = Command[1]
            if Command == '' or len(Command) <= 1:
                continue
            Komut = re.findall("(^.*[a-zA-Z0-9≈üƒü√º√∂√ßƒ±]\w)", Command)
            if (len(Komut) >= 1) and (not Komut[0] == ''):
                Komut = Komut[0]
                if Komut[0] == '^':
                    KomutStr = Komut[1:]
                    if KomutStr[0] == '.':
                        KomutStr = KomutStr[1:]
                    Komutlar.append(KomutStr)
                else:
                    if Command[0] == '^':
                        KomutStr = Command[1:]
                        if KomutStr[0] == '.':
                            KomutStr = KomutStr[1:]
                        else:
                            KomutStr = Command
                        Komutlar.append(KomutStr)

            # CODPY
            Codpy = re.search('\"\"\"CODPY(.*)\"\"\"', FileRead, re.DOTALL)
            if not Codpy == None:
                Codpy = Codpy.group(0)
                for Satir in Codpy.splitlines():
                    if (not '"""' in Satir) and (':' in Satir):
                        Satir = Satir.split(':')
                        Isim = Satir[0]
                        Deger = Satir[1][1:]
                                
                        if Isim == 'INFO':
                            CmdHelp.add_info(Deger)
                        elif Isim == 'WARN':
                            CmdHelp.add_warning(Deger)
                        else:
                            CmdHelp.set_file_info(Isim, Deger)
            for Komut in Komutlar:
                # if re.search('\[(\w*)\]', Komut):
                    # Komut = re.sub('(?<=\[.)[A-Za-z0-9_]*\]', '', Komut).replace('[', '')
                CmdHelp.add_command(Komut, None, 'Bu plugin qƒ±raƒüdan y√ºkl…ônib. H…ôr hansƒ±sa bir a√ßƒ±qlama yazƒ±lmayƒ±b.')
            CmdHelp.add()

try:
    bot.start()
    idim = bot.get_me().id
    codbl = requests.get('https://raw.githubusercontent.com/Texnocom/Codeaz/master/codx.json').json()
    if idim in codbl:
        bot.disconnect()

    # ChromeDriver #
    try:
        chromedriver_autoinstaller.install()
    except:
        pass
    
    # Galeri i√ßin deƒüerler
    GALERI = {}

    # PLUGIN MESAJLARI AYARLIYORUZ
    PLUGIN_MESAJLAR = {}
    ORJ_PLUGIN_MESAJLAR = {"alive": "`CodeBot Aktivdir`", "afk": f"`{str(choice(AFKSTR))}`", "kickme": "`Yaxsƒ± m…ôn getdim `ü•∞", "pm": UNAPPROVED_MSG, "dƒ±zcƒ±": str(choice(DIZCILIK_STR)), "ban": "{mention}`, banlandƒ±!`", "mute": "{mention}`, susduruldu!`", "approve": "{mention}`, m…ôn…ô mesaj g√∂nd…ôr…ô bil…ôrs…ôn!`", "disapprove": "{mention}`, artƒ±q m…ôn…ô mesaj g√∂nd…ôr…ô bilm…ôrs…ôn!`", "block": "{mention}`, bloklandƒ±n!`"}

    PLUGIN_MESAJLAR_TURLER = ["alive", "afk", "kickme", "pm", "dƒ±zcƒ±", "ban", "mute", "approve", "disapprove", "block"]
    for mesaj in PLUGIN_MESAJLAR_TURLER:
        dmsj = MSJ_SQL.getir_mesaj(mesaj)
        if dmsj == False:
            PLUGIN_MESAJLAR[mesaj] = ORJ_PLUGIN_MESAJLAR[mesaj]
        else:
            if dmsj.startswith("MEDYA_"):
                medya = int(dmsj.split("MEDYA_")[1])
                medya = bot.get_messages(PLUGIN_CHANNEL_ID, ids=medya)

                PLUGIN_MESAJLAR[mesaj] = medya
            else:
                PLUGIN_MESAJLAR[mesaj] = dmsj
    if not PLUGIN_CHANNEL_ID == None:
        LOGS.info("Pluginl…ôr Y√ºkl…ônir")
        try:
            KanalId = bot.get_entity(PLUGIN_CHANNEL_ID)
        except:
            KanalId = "me"

        for plugin in bot.iter_messages(KanalId, filter=InputMessagesFilterDocument):
            if plugin.file.name and (len(plugin.file.name.split('.')) > 1) \
                and plugin.file.name.split('.')[-1] == 'py':
                Split = plugin.file.name.split('.')

                if not os.path.exists("./userbot/modules/" + plugin.file.name):
                    dosya = bot.download_media(plugin, "./userbot/modules/")
                else:
                    LOGS.info("Bu Plugin Onsuz Y√ºkl…ônih " + plugin.file.name)
                    extractCommands('./userbot/modules/' + plugin.file.name)
                    dosya = plugin.file.name
                    continue 
                
                try:
                    spec = importlib.util.spec_from_file_location("userbot.modules." + Split[0], dosya)
                    mod = importlib.util.module_from_spec(spec)

                    spec.loader.exec_module(mod)
                except Exception as e:
                    LOGS.info(f"`Y√ºkl…ôm…ô uƒüursuz! Plugin x…ôtalƒ±dƒ±r.\n\nX…ôta: {e}`")

                    try:
                        plugin.delete()
                    except:
                        pass

                    if os.path.exists("./userbot/modules/" + plugin.file.name):
                        os.remove("./userbot/modules/" + plugin.file.name)
                    continue
                extractCommands('./userbot/modules/' + plugin.file.name)
    else:
        bot.send_message("me", f"`Xai≈ü pluginl…ôrin qalƒ±cƒ± olmasƒ± √º√ß√ºn PLUGIN_CHANNEL_ID'i d√ºz…ôldin.`")
except PhoneNumberInvalidError:
    print(INVALID_PH)
    exit(1)

async def FotoDegistir (foto):
    FOTOURL = GALERI_SQL.TUM_GALERI[foto].foto
    r = requests.get(FOTOURL)

    with open(str(foto) + ".jpg", 'wb') as f:
        f.write(r.content)    
    file = await bot.upload_file(str(foto) + ".jpg")
    try:
        await bot(functions.photos.UploadProfilePhotoRequest(
            file
        ))
        return True
    except:
        return False

for module_name in ALL_MODULES:
    imported_module = import_module("userbot.modules." + module_name)

LOGS.info("Botunuz i≈üleyir! Her hansi bir s√∂hbete .alive yazaraq Test edin."
          " Yardƒ±ma ehtiyacƒ±nƒ±z varsa, Destek qrupumuza buyurun t.me/UseratorSUP")
LOGS.info(f"Bot versiyasƒ±: Codeaz {COD_VERSION}")

"""
if len(argv) not in (1, 3, 4):
    bot.disconnect()
else:
"""
bot.run_until_disconnected()
